rules = [
  # Replace org.apache.spark.sql.catalyst.expressions.aggregate.NoOp with org.apache.spark.sql.catalyst.expressions.aggregate.Noop
  "org.apache.spark.sql.catalyst.expressions.aggregate.NoOp",

  # Replace nullable method in org.apache.spark.sql.catalyst.expressions.Expression with nullable: Boolean
  "org.apache.spark.sql.catalyst.expressions.Expression.nullable",

  # Replace from_unixtime function in org.apache.spark.sql.functions with from_unix_timestamp
  "org.apache.spark.sql.functions.from_unixtime",

  # Replace jdbc method in org.apache.spark.sql.DataFrameReader with jdbc
  "org.apache.spark.sql.DataFrameReader.jdbc",

  # Replace na.drop method in org.apache.spark.sql.DataFrame with drop
  "org.apache.spark.sql.DataFrame.na.drop",

  # Replace typedLit method in org.apache.spark.sql.functions with lit
  "org.apache.spark.sql.functions.typedLit",

  # Replace getter method in org.apache.spark.sql.types.SQLUserDefinedType with userDefinedTypeName
  "org.apache.spark.sql.types.SQLUserDefinedType.getter",

  # Replace setter method in org.apache.spark.sql.types.SQLUserDefinedType with sqlType
  "org.apache.spark.sql.types.SQLUserDefinedType.setter",

  # Redundant null check
  # This rule detects null checks that are redundant because the value being checked cannot be null.
  "null",

  # Unnecessary type bounds
  # This rule detects type bounds that are unnecessary and can be safely removed.
  "typeBounds",

  # Unused imports
  # This rule detects imports that are not used in the codebase and can be safely removed.
  "UnusedImports"
]

OrganizeImports {
  blankLines = Auto
  groups = [
    "re:javax?\\."
    "scala."
    "org.apache.spark."
    "*"
  ]
}